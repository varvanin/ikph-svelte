{"version":3,"file":"index-08629ea7.js","sources":["../../node_modules/svelte-lazy-image/src/index.svelte"],"sourcesContent":["<script>\n  import { onMount } from \"svelte\";\n\n  let observerCallback = function(entries, observer) {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        intersected = true;\n        observer.unobserve(imgElement);\n      }\n    });\n  };\n\n  export let placeholder;\n  export let src;\n  export let alt;\n\n  let imgElement;\n  let path;\n\n  let observer;\n  let intersected = false;\n  let loaded = false;\n\n  $: path = intersected ? src : placeholder;\n\n  onMount(() => {\n    observer = new IntersectionObserver(observerCallback)\n    observer.observe(imgElement);\n\n    return () => {\n      observer.unobserve(imgElement);\n    };\n  });\n\n  function handleLoad() {\n    if (!loaded && path === src) {\n      loaded = true;\n    }\n  }\n</script>\n\n<img\n  src={path}\n  {alt}\n  on:load={handleLoad}\n  bind:this={imgElement}\n  class=\"svelte-lazy-image\"\n  class:svelte-lazy-image--loaded={loaded}\n/>\n"],"names":["ctx","imgElement","path","observer","observerCallback","entries","forEach","entry","isIntersecting","intersected","unobserve","placeholder","src","alt","loaded","onMount","IntersectionObserver","observe"],"mappings":"uPA0COA,qGAK4BA,6CAHxBA,gCAFJA,8EAK4BA,oEA/B7BC,EACAC,EAEAC,EAhBAC,WAA4BC,EAASF,GACvCE,EAAQC,QAAQC,IACVA,EAAMC,qBACRC,GAAc,GACdN,EAASO,UAAUT,oBAKdU,UACAC,UACAC,KAMPJ,GAAc,EACdK,GAAS,SAIbC,OACEZ,MAAea,qBAAqBZ,GACpCD,EAASc,QAAQhB,QAGfE,EAASO,UAAUT,+IAPpBC,EAAOO,EAAcG,EAAMD,wBAYvBG,GAAUZ,IAASU,OACtBE,GAAS,yDASFb"}